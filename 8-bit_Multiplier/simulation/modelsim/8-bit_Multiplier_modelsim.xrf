vendor_name = ModelSim
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/Synchronizers.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/Multiplier_8_bit.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/HexDriver.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/Control_Unit.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/9-bit_Adder_Subtractor.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/8-bit_Register.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/8-bit_Multiplier_testbench.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/1-bit_Register.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/1-bit_Full_Adder.sv
source_file = 1, C:/Users/Marco Reus/Documents/ECE385/8-bit_Multiplier/db/8-bit_Multiplier.cbx.xml
design_name = Multiplier_8_bit
instance = comp, \~QUARTUS_CREATED_GND~I , ~QUARTUS_CREATED_GND~I, Multiplier_8_bit, 1
instance = comp, \HEX0[0]~output , HEX0[0]~output, Multiplier_8_bit, 1
instance = comp, \HEX0[1]~output , HEX0[1]~output, Multiplier_8_bit, 1
instance = comp, \HEX0[2]~output , HEX0[2]~output, Multiplier_8_bit, 1
instance = comp, \HEX0[3]~output , HEX0[3]~output, Multiplier_8_bit, 1
instance = comp, \HEX0[4]~output , HEX0[4]~output, Multiplier_8_bit, 1
instance = comp, \HEX0[5]~output , HEX0[5]~output, Multiplier_8_bit, 1
instance = comp, \HEX0[6]~output , HEX0[6]~output, Multiplier_8_bit, 1
instance = comp, \HEX1[0]~output , HEX1[0]~output, Multiplier_8_bit, 1
instance = comp, \HEX1[1]~output , HEX1[1]~output, Multiplier_8_bit, 1
instance = comp, \HEX1[2]~output , HEX1[2]~output, Multiplier_8_bit, 1
instance = comp, \HEX1[3]~output , HEX1[3]~output, Multiplier_8_bit, 1
instance = comp, \HEX1[4]~output , HEX1[4]~output, Multiplier_8_bit, 1
instance = comp, \HEX1[5]~output , HEX1[5]~output, Multiplier_8_bit, 1
instance = comp, \HEX1[6]~output , HEX1[6]~output, Multiplier_8_bit, 1
instance = comp, \HEX2[0]~output , HEX2[0]~output, Multiplier_8_bit, 1
instance = comp, \HEX2[1]~output , HEX2[1]~output, Multiplier_8_bit, 1
instance = comp, \HEX2[2]~output , HEX2[2]~output, Multiplier_8_bit, 1
instance = comp, \HEX2[3]~output , HEX2[3]~output, Multiplier_8_bit, 1
instance = comp, \HEX2[4]~output , HEX2[4]~output, Multiplier_8_bit, 1
instance = comp, \HEX2[5]~output , HEX2[5]~output, Multiplier_8_bit, 1
instance = comp, \HEX2[6]~output , HEX2[6]~output, Multiplier_8_bit, 1
instance = comp, \HEX3[0]~output , HEX3[0]~output, Multiplier_8_bit, 1
instance = comp, \HEX3[1]~output , HEX3[1]~output, Multiplier_8_bit, 1
instance = comp, \HEX3[2]~output , HEX3[2]~output, Multiplier_8_bit, 1
instance = comp, \HEX3[3]~output , HEX3[3]~output, Multiplier_8_bit, 1
instance = comp, \HEX3[4]~output , HEX3[4]~output, Multiplier_8_bit, 1
instance = comp, \HEX3[5]~output , HEX3[5]~output, Multiplier_8_bit, 1
instance = comp, \HEX3[6]~output , HEX3[6]~output, Multiplier_8_bit, 1
instance = comp, \Aval[0]~output , Aval[0]~output, Multiplier_8_bit, 1
instance = comp, \Aval[1]~output , Aval[1]~output, Multiplier_8_bit, 1
instance = comp, \Aval[2]~output , Aval[2]~output, Multiplier_8_bit, 1
instance = comp, \Aval[3]~output , Aval[3]~output, Multiplier_8_bit, 1
instance = comp, \Aval[4]~output , Aval[4]~output, Multiplier_8_bit, 1
instance = comp, \Aval[5]~output , Aval[5]~output, Multiplier_8_bit, 1
instance = comp, \Aval[6]~output , Aval[6]~output, Multiplier_8_bit, 1
instance = comp, \Aval[7]~output , Aval[7]~output, Multiplier_8_bit, 1
instance = comp, \Bval[0]~output , Bval[0]~output, Multiplier_8_bit, 1
instance = comp, \Bval[1]~output , Bval[1]~output, Multiplier_8_bit, 1
instance = comp, \Bval[2]~output , Bval[2]~output, Multiplier_8_bit, 1
instance = comp, \Bval[3]~output , Bval[3]~output, Multiplier_8_bit, 1
instance = comp, \Bval[4]~output , Bval[4]~output, Multiplier_8_bit, 1
instance = comp, \Bval[5]~output , Bval[5]~output, Multiplier_8_bit, 1
instance = comp, \Bval[6]~output , Bval[6]~output, Multiplier_8_bit, 1
instance = comp, \Bval[7]~output , Bval[7]~output, Multiplier_8_bit, 1
instance = comp, \X~output , X~output, Multiplier_8_bit, 1
instance = comp, \CLK~input , CLK~input, Multiplier_8_bit, 1
instance = comp, \CLK~inputclkctrl , CLK~inputclkctrl, Multiplier_8_bit, 1
instance = comp, \S[3]~input , S[3]~input, Multiplier_8_bit, 1
instance = comp, \Reset~input , Reset~input, Multiplier_8_bit, 1
instance = comp, \S[5]~input , S[5]~input, Multiplier_8_bit, 1
instance = comp, \ClearA_LoadB~input , ClearA_LoadB~input, Multiplier_8_bit, 1
instance = comp, \synchronizer2|q~0 , synchronizer2|q~0, Multiplier_8_bit, 1
instance = comp, \synchronizer2|q , synchronizer2|q, Multiplier_8_bit, 1
instance = comp, \S[6]~input , S[6]~input, Multiplier_8_bit, 1
instance = comp, \S[2]~input , S[2]~input, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~3 , Reg_B_8_bit|Data_Out~3, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_5~feeder , Control_Unit|current_state.add_5~feeder, Multiplier_8_bit, 1
instance = comp, \synchronizer0|q , synchronizer0|q, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_5 , Control_Unit|current_state.add_5, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_5 , Control_Unit|current_state.shift_5, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_6 , Control_Unit|current_state.add_6, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_6~feeder , Control_Unit|current_state.shift_6~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_6 , Control_Unit|current_state.shift_6, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_7 , Control_Unit|current_state.add_7, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_7 , Control_Unit|current_state.shift_7, Multiplier_8_bit, 1
instance = comp, \Execute~input , Execute~input, Multiplier_8_bit, 1
instance = comp, \synchronizer1|q~0 , synchronizer1|q~0, Multiplier_8_bit, 1
instance = comp, \synchronizer1|q , synchronizer1|q, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector18~0 , Control_Unit|Selector18~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.hold , Control_Unit|current_state.hold, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector1~4 , Control_Unit|Selector1~4, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector1~2 , Control_Unit|Selector1~2, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector1~0 , Control_Unit|Selector1~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector1~3 , Control_Unit|Selector1~3, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.load , Control_Unit|current_state.load, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector0~0 , Control_Unit|Selector0~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.start , Control_Unit|current_state.start, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector1~1 , Control_Unit|Selector1~1, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.check~0 , Control_Unit|current_state.check~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.check , Control_Unit|current_state.check, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector20~0 , Control_Unit|Selector20~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.restart , Control_Unit|current_state.restart, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector2~0 , Control_Unit|Selector2~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_0 , Control_Unit|current_state.add_0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_0~feeder , Control_Unit|current_state.shift_0~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_0 , Control_Unit|current_state.shift_0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_1~feeder , Control_Unit|current_state.add_1~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_1 , Control_Unit|current_state.add_1, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_1~feeder , Control_Unit|current_state.shift_1~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_1 , Control_Unit|current_state.shift_1, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_2~feeder , Control_Unit|current_state.add_2~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_2 , Control_Unit|current_state.add_2, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_2~feeder , Control_Unit|current_state.shift_2~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_2 , Control_Unit|current_state.shift_2, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_3~feeder , Control_Unit|current_state.add_3~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_3 , Control_Unit|current_state.add_3, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_3~feeder , Control_Unit|current_state.shift_3~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_3 , Control_Unit|current_state.shift_3, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_4~feeder , Control_Unit|current_state.add_4~feeder, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.add_4 , Control_Unit|current_state.add_4, Multiplier_8_bit, 1
instance = comp, \Control_Unit|current_state.shift_4 , Control_Unit|current_state.shift_4, Multiplier_8_bit, 1
instance = comp, \Control_Unit|WideOr19~1 , Control_Unit|WideOr19~1, Multiplier_8_bit, 1
instance = comp, \Control_Unit|WideOr19~0 , Control_Unit|WideOr19~0, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[2]~1 , Reg_B_8_bit|Data_Out[2]~1, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[2] , Reg_B_8_bit|Data_Out[2], Multiplier_8_bit, 1
instance = comp, \S[1]~input , S[1]~input, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~2 , Reg_B_8_bit|Data_Out~2, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[1] , Reg_B_8_bit|Data_Out[1], Multiplier_8_bit, 1
instance = comp, \S[0]~input , S[0]~input, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~0 , Reg_B_8_bit|Data_Out~0, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[0] , Reg_B_8_bit|Data_Out[0], Multiplier_8_bit, 1
instance = comp, \Control_Unit|WideOr20~1 , Control_Unit|WideOr20~1, Multiplier_8_bit, 1
instance = comp, \Control_Unit|WideOr20~0 , Control_Unit|WideOr20~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Selector21~0 , Control_Unit|Selector21~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_0|Sum~0 , Add_Sub_9_bit|FA_1_bit_0|Sum~0, Multiplier_8_bit, 1
instance = comp, \comb~0 , comb~0, Multiplier_8_bit, 1
instance = comp, \Control_Unit|Subtract_Enable~0 , Control_Unit|Subtract_Enable~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_0|Cout~0 , Add_Sub_9_bit|FA_1_bit_0|Cout~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_0|Cout~1 , Add_Sub_9_bit|FA_1_bit_0|Cout~1, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|B_Add_Subtract[1] , Add_Sub_9_bit|B_Add_Subtract[1], Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_1|Cout~0 , Add_Sub_9_bit|FA_1_bit_1|Cout~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_2|Sum , Add_Sub_9_bit|FA_1_bit_2|Sum, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_2|Cout~0 , Add_Sub_9_bit|FA_1_bit_2|Cout~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_3|Sum , Add_Sub_9_bit|FA_1_bit_3|Sum, Multiplier_8_bit, 1
instance = comp, \S[7]~input , S[7]~input, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_8|Sum~0 , Add_Sub_9_bit|FA_1_bit_8|Sum~0, Multiplier_8_bit, 1
instance = comp, \S[4]~input , S[4]~input, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_3|Cout~0 , Add_Sub_9_bit|FA_1_bit_3|Cout~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_4|Cout~0 , Add_Sub_9_bit|FA_1_bit_4|Cout~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_5|Cout~0 , Add_Sub_9_bit|FA_1_bit_5|Cout~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_6|Cout~0 , Add_Sub_9_bit|FA_1_bit_6|Cout~0, Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_7|Cout~0 , Add_Sub_9_bit|FA_1_bit_7|Cout~0, Multiplier_8_bit, 1
instance = comp, \Reg_X_1_bit|Q~0 , Reg_X_1_bit|Q~0, Multiplier_8_bit, 1
instance = comp, \Reg_X_1_bit|Q , Reg_X_1_bit|Q, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~8 , Reg_A_8_bit|Data_Out~8, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~9 , Reg_A_8_bit|Data_Out~9, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[4]~1 , Reg_A_8_bit|Data_Out[4]~1, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[7] , Reg_A_8_bit|Data_Out[7], Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_6|Sum , Add_Sub_9_bit|FA_1_bit_6|Sum, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~7 , Reg_A_8_bit|Data_Out~7, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[6] , Reg_A_8_bit|Data_Out[6], Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_5|Sum , Add_Sub_9_bit|FA_1_bit_5|Sum, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~6 , Reg_A_8_bit|Data_Out~6, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[5] , Reg_A_8_bit|Data_Out[5], Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_4|Sum , Add_Sub_9_bit|FA_1_bit_4|Sum, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~5 , Reg_A_8_bit|Data_Out~5, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[4] , Reg_A_8_bit|Data_Out[4], Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~4 , Reg_A_8_bit|Data_Out~4, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[3] , Reg_A_8_bit|Data_Out[3], Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~3 , Reg_A_8_bit|Data_Out~3, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[2] , Reg_A_8_bit|Data_Out[2], Multiplier_8_bit, 1
instance = comp, \Add_Sub_9_bit|FA_1_bit_1|Sum , Add_Sub_9_bit|FA_1_bit_1|Sum, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~2 , Reg_A_8_bit|Data_Out~2, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[1] , Reg_A_8_bit|Data_Out[1], Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out~0 , Reg_A_8_bit|Data_Out~0, Multiplier_8_bit, 1
instance = comp, \Reg_A_8_bit|Data_Out[0] , Reg_A_8_bit|Data_Out[0], Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~8 , Reg_B_8_bit|Data_Out~8, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[7] , Reg_B_8_bit|Data_Out[7], Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~7 , Reg_B_8_bit|Data_Out~7, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[6] , Reg_B_8_bit|Data_Out[6], Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~6 , Reg_B_8_bit|Data_Out~6, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[5] , Reg_B_8_bit|Data_Out[5], Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~5 , Reg_B_8_bit|Data_Out~5, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[4] , Reg_B_8_bit|Data_Out[4], Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out~4 , Reg_B_8_bit|Data_Out~4, Multiplier_8_bit, 1
instance = comp, \Reg_B_8_bit|Data_Out[3] , Reg_B_8_bit|Data_Out[3], Multiplier_8_bit, 1
instance = comp, \HexBL|WideOr6~0 , HexBL|WideOr6~0, Multiplier_8_bit, 1
instance = comp, \HexBL|WideOr5~0 , HexBL|WideOr5~0, Multiplier_8_bit, 1
instance = comp, \HexBL|WideOr4~0 , HexBL|WideOr4~0, Multiplier_8_bit, 1
instance = comp, \HexBL|WideOr3~0 , HexBL|WideOr3~0, Multiplier_8_bit, 1
instance = comp, \HexBL|WideOr2~0 , HexBL|WideOr2~0, Multiplier_8_bit, 1
instance = comp, \HexBL|WideOr1~0 , HexBL|WideOr1~0, Multiplier_8_bit, 1
instance = comp, \HexBL|WideOr0~0 , HexBL|WideOr0~0, Multiplier_8_bit, 1
instance = comp, \HexBU|WideOr6~0 , HexBU|WideOr6~0, Multiplier_8_bit, 1
instance = comp, \HexBU|WideOr5~0 , HexBU|WideOr5~0, Multiplier_8_bit, 1
instance = comp, \HexBU|WideOr4~0 , HexBU|WideOr4~0, Multiplier_8_bit, 1
instance = comp, \HexBU|WideOr3~0 , HexBU|WideOr3~0, Multiplier_8_bit, 1
instance = comp, \HexBU|WideOr2~0 , HexBU|WideOr2~0, Multiplier_8_bit, 1
instance = comp, \HexBU|WideOr1~0 , HexBU|WideOr1~0, Multiplier_8_bit, 1
instance = comp, \HexBU|WideOr0~0 , HexBU|WideOr0~0, Multiplier_8_bit, 1
instance = comp, \HexAL|WideOr6~0 , HexAL|WideOr6~0, Multiplier_8_bit, 1
instance = comp, \HexAL|WideOr5~0 , HexAL|WideOr5~0, Multiplier_8_bit, 1
instance = comp, \HexAL|WideOr4~0 , HexAL|WideOr4~0, Multiplier_8_bit, 1
instance = comp, \HexAL|WideOr3~0 , HexAL|WideOr3~0, Multiplier_8_bit, 1
instance = comp, \HexAL|WideOr2~0 , HexAL|WideOr2~0, Multiplier_8_bit, 1
instance = comp, \HexAL|WideOr1~0 , HexAL|WideOr1~0, Multiplier_8_bit, 1
instance = comp, \HexAL|WideOr0~0 , HexAL|WideOr0~0, Multiplier_8_bit, 1
instance = comp, \HexAU|WideOr6~0 , HexAU|WideOr6~0, Multiplier_8_bit, 1
instance = comp, \HexAU|WideOr5~0 , HexAU|WideOr5~0, Multiplier_8_bit, 1
instance = comp, \HexAU|WideOr4~0 , HexAU|WideOr4~0, Multiplier_8_bit, 1
instance = comp, \HexAU|WideOr3~0 , HexAU|WideOr3~0, Multiplier_8_bit, 1
instance = comp, \HexAU|WideOr2~0 , HexAU|WideOr2~0, Multiplier_8_bit, 1
instance = comp, \HexAU|WideOr1~0 , HexAU|WideOr1~0, Multiplier_8_bit, 1
instance = comp, \HexAU|WideOr0~0 , HexAU|WideOr0~0, Multiplier_8_bit, 1
instance = comp, \~QUARTUS_CREATED_UNVM~ , ~QUARTUS_CREATED_UNVM~, Multiplier_8_bit, 1
instance = comp, \~QUARTUS_CREATED_ADC1~ , ~QUARTUS_CREATED_ADC1~, Multiplier_8_bit, 1
instance = comp, \~QUARTUS_CREATED_ADC2~ , ~QUARTUS_CREATED_ADC2~, Multiplier_8_bit, 1
design_name = hard_block
instance = comp, \~ALTERA_TMS~~ibuf , ~ALTERA_TMS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TCK~~ibuf , ~ALTERA_TCK~~ibuf, hard_block, 1
instance = comp, \~ALTERA_TDI~~ibuf , ~ALTERA_TDI~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONFIG_SEL~~ibuf , ~ALTERA_CONFIG_SEL~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nCONFIG~~ibuf , ~ALTERA_nCONFIG~~ibuf, hard_block, 1
instance = comp, \~ALTERA_nSTATUS~~ibuf , ~ALTERA_nSTATUS~~ibuf, hard_block, 1
instance = comp, \~ALTERA_CONF_DONE~~ibuf , ~ALTERA_CONF_DONE~~ibuf, hard_block, 1
